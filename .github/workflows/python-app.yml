name: Flask CI/CD Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Check out code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🧪 Run tests
      run: pytest

    - name: 📬 Gmail - 測試成功通知
      if: success()
      env:
        GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
        GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
        GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
      run: |
        pip install google-auth google-auth-oauthlib google-api-python-client
        python send_email.py "✅ 測試成功" "Flask 測試已通過，準備部署..."

    - name: 🚀 Deploy to Heroku
      id: deploy_heroku
      if: success()
      continue-on-error: true
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
        git push heroku HEAD:main -f

    - name: 📬 Gmail - 部署結果通知
      if: always()
      env:
        GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
        GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
        GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
      run: |
        pip install google-auth google-auth-oauthlib google-api-python-client
        if [ "${{ steps.deploy_heroku.outcome }}" = "success" ]; then
          python send_email.py "🚀 部署成功" "你的應用已成功部署到 Heroku！"
        else
          python send_email.py "❌ 部署失敗" "部署 Heroku 發生錯誤，請檢查 CI log。"
        fi
